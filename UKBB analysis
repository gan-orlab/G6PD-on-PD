UKBB analysis

### Step 1 do tabix for UKBB files
module load nixpkgs/16.09
module load intel/2018.3
module load tabix/0.2.6

tabix -f -p vcf ukb23156_cX_b23_v1.vcf.gz


#step 2 , do GATK with GQ30 DP20 also remove multiallelic sites
## To get GQ30 DP20 from ukb23156_cX_b23_v1.vcf.gz use bcf tools 
bcftools filter -i 'GQ >= 20 & DP >= 30' ukb23156_cX_b23_v1.vcf.gz -Oz -o UKBB_GQ_DP.vcf.gz

### bcftools view -i 'F_MISSING<0.05' UKBB_GQ_DP.vcf.gz -Oz -o UKBB_GQ_DP_missing_filtered.vcf.gz

## Then do GATK with GQ30 DP20 also remove multiallelic sites using this script 
 vcftools --gzvcf UKBB_GQ_DP.vcf.gz --max-alleles 2 --min-alleles 2 --recode --stdout | gzip -c > UKBB_GQ20_DP30_MISS_filtered_2alleles_vcf.gz

### convert to b-files
plink --vcf UKBB_GQ20_DP10_MISS_filtered_2alleles_vcf.gz   --vcf-half-call m --make-bed --out UKBB_GQ20_DP10_MISS_filtered_2alleles_vcf.gz_after_GATK

###
plink2 --bfile UKBB_GQ20_DP10_MISS_filtered_2alleles_vcf.gz_after_GATK --out all_rare_ukbb --export vcf bgz id-paste=fid

### OR extract your specified base pair gene already 
 plink --bfile UKBB_GQ20_DP10_MISS_filtered_2alleles_vcf.gz_after_GATK --chr X --from-bp 154531391 --to-bp 154546846 --make-bed --out UKBB_G6PD_part


### convert vcf to ANNOVAR format
 perl ~/runs/leahc/AMP_G6PD/annovar/convert2annovar.pl --format vcf4 UKBB_GQ20_DP10_MISS_filtered_2alleles_vcf.gz --allsample --withfreq --outfile UKBB_recode_convert   ## OR USE ##  perl ~/runs/leahc/AMP_G6PD/annovar/convert2annovar.pl --format vcf4 UKBB_GLA_part.vcf.gz --allsample --withfreq --outfile UKBB_GLA_recode_convert


### annotate all snps
perl ~/runs/leahc/AMP_G6PD/annovar/table_annovar.pl UKBB_recode_convert ~/runs/leahc/AMP/annovar/humandb/ --buildver hg38 --out UKBB_recode_conver_annovar --remove --protocol refGene,ljb26_all,dbnsfp41c --operation g,f,f --nastring .  (THIS SCRIPT HAS ISSUES BECAUSE OF TWO f,f rather take the one from UKBB)

### CADD Variants
awk -F '\t' 'NR>1 && $31>20 {print $1" "$2" "$3" "$7}' UKBB_recode_conver_annovar.hg38_multianno.txt > UKBB_CADD.txt

### NS
awk -F '\t' '$9 ~ /nonsyn/ {print $1" "$2" "$3" "$7}' UKBB_recode_conver_annovar.hg38_multianno.txt > UKBB_nonsyn.txt

### LOF
awk -F '\t' '$9 ~ /stop|frame/ || $6 ~ /splicing/ {print $1" "$2" "$3" "$7}'   UKBB_recode_conver_annovar.hg38_multianno.txt  > UKBB_LOF.txt

### Functional
awk -F '\t' '$9 ~ /nonsyn|stop|frame/ || $6 ~ /splicing/ {print $1, $2, $3, $7}'  UKBB_recode_conver_annovar.hg38_multianno.txt  > UKBB_functional.txt

### To prepare for RV tests
## Extract variants from annotated for UKBB_CADD,LOF,nonsyn and functional or it means combine and match CADD etc and UKBB bfiles
## Do the rest for nonsyn, LOF and functional 
plink2 --bfile UKBB_GQ20_DP10_MISS_filtered_2alleles_vcf.gz_after_GATK --extract range UKBB_CADD.txt --export vcf bgz id-paste=fid --out UKBB_CADD_final

### Then run tabix again using the recent (up) UKBB_CADD_final ... etc (other)
tabix -f -p vcf UKBB_CADD_final.vcf.gz

### Then to extract G6PD from UKBB_CADD_final.vcf.gz use bcftools?
bcftools view -i 'ID="G6PD"' -Oz -o UKBB_G6PD_nonsyn.vcf.gz UKBB_nonsyn_final.vcf.gz

### to get G6PD.txt hg38 format
gunzip refFlat.txt.gz
grep G6PD refFlat.txt > G6PD.txt


### Run RV
 rvtest --inVcf UKBB_G6PD_functional_final.vcf.gz --burden cmcWald--kernel skato --geneFile G6PD.txt  --covar covar_WITHproxy_UKBB.txt --covar-name Age,Sex --out UKBB_WITHproxy_G6PD_functional --numThread 4 --freqUpper 0.01 --pheno covar_WITHproxy_UKBB.txt --pheno-name PHENO
### When running separate sex fOR rv PLEASE REMOVE SEX FROM THE SCRIPT
### burden cmcWald
rvtest --inVcf ~/runs/leahc/UKBB/UKBB_G6PD/UKBB_G6PD_functional_final.vcf.gz --burden cmcWald --kernel skato --geneFile ~/runs/leahc/UKBB/UKBB_G6PD/G6PD.txt  --covar ~/runs/leahc/UKBB/UKBB_G6PD/covar_WITHproxy_UKBB_females.txt --covar-name Age --out UKBB_WITHproxy_G6PD_functional_females --numThread 4 --freqUpper 0.01 --pheno ~/runs/leahc/UKBB/UKBB_G6PD/covar_WITHproxy_UKBB_females.txt --pheno-name PHENO
